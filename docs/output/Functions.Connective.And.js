Ext.data.JsonP.Functions_Connective_And({"tagname":"class","name":"Functions.Connective.And","autodetected":{},"files":[{"filename":"And.js","href":"And.html#Functions-Connective-And"}],"extends":"Function","members":[{"name":"value","tagname":"method","owner":"Functions.Connective.And","id":"method-value","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-Functions.Connective.And","short_doc":"Function that checks if its arguments all return a true boolean. ...","component":false,"superclasses":["Function"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>Function<div class='subclass '><strong>Functions.Connective.And</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/And.html#Functions-Connective-And' target='_blank'>And.js</a></div></pre><div class='doc-contents'><p>Function that checks if its arguments all return a true boolean.</p>\n\n<p>When used with an Extension operator :</p>\n\n<pre><code> var philosophers = new affinity.Relation([\n         {name: { type: affinity.String}},\n         {born: { type: affinity.Integer}},\n         {died: { type: affinity.Integer}}\n     ],[\n         ['Aristotle', -384, -322],\n         ['Plato',     -428, -348],\n         ['Socrates',  -470, -399]\n     ]);\n\n name = philosophers.get('name');\n born = philosophers.get('born');\n died = philosophers.get('died');\n\n var extended = philosophers.extend([{ \"322to384BC\" : died.eq(-322).and(born.eq(-384)) }]);\n\n // or equivalent :\n\n var extended = philosophers.extend([\n     { diedIn322BC : new affinity.And(new affinity.Equal(died, -322), new affinity.Equal(born, -384)) }\n ]);\n\n extended.print();\n\n // +----------------+-----------------+-----------------+------------------------+\n // | name : TString | born : TInteger | died : TInteger | 322to384BC : TBoolean  |\n // +================+=================+=================+========================+\n // | Aristotle      | -384            | -322            | true                   |\n // +----------------+-----------------+-----------------+------------------------+\n // | Plato          | -428            | -348            | false                  |\n // +----------------+-----------------+-----------------+------------------------+\n // | Socrates       | -470            | -399            | false                  |\n // +----------------+-----------------+-----------------+------------------------+\n</code></pre>\n\n<p>When used with a Restriction operator :</p>\n\n<pre><code> var restricted = philosophers.restrict(died.eq(-322).and(born.eq(-384)));\n\n // or equivalent :\n\n var restricted = philosophers.restrict(\n     new affinity.And(new affinity.Equal(died, -322), new affinity.Equal(born, -384))\n );\n\n restricted.print();\n\n // +----------------+-----------------+-----------------+\n // | name : TString | born : TInteger | died : TInteger |\n // +================+=================+=================+\n // | Aristotle      | -384            | -322            |\n // +----------------+-----------------+-----------------+\n</code></pre>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-value' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Functions.Connective.And'>Functions.Connective.And</span><br/><a href='source/And.html#Functions-Connective-And-method-value' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Functions.Connective.And-method-value' class='name expandable'>value</a>( <span class='pre'></span> ) : boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the function return value ...</div><div class='long'><p>Gets the function return value</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>boolean</span><div class='sub-desc'>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});