Ext.data.JsonP.Operators_Wrap({"tagname":"class","name":"Operators.Wrap","autodetected":{},"files":[{"filename":"Wrap.js","href":"Wrap.html#Operators-Wrap"}],"extends":"Relation","params":[{"tagname":"params","type":"Relation","name":"relationA","doc":"<p>The relation to wrap</p>\n","html_type":"<a href=\"#!/api/Relation\" rel=\"Relation\" class=\"docClass\">Relation</a>"},{"tagname":"params","type":"String","name":"wrappingAttributeName","doc":"<p>The name of the wrapping attribute</p>\n","html_type":"String"},{"tagname":"params","type":"String[]","name":"wrappedAttributes","doc":"<p>The wrappedAttributes to wrap</p>\n\n<p>The Wrap will gather multiple wrappedAttributes into a single one, converting them to a tuple-valued attribute</p>\n\n<pre><code>var relationA = new affinity.Relation([\n         {characterId: { type: affinity.Integer}},\n         {firstName: { type: affinity.String}},\n         {lastName: { type: affinity.String}}\n     ],[\n         [1, 'John', 'Doe'],\n         [2, 'Mary', 'Poppins'],\n         [3, 'Lucky', 'Luke']\n     ]);\n\n// +------------------------+---------------------+--------------------+\n// | characterId : TInteger | firstName : TString | lastName : TString |\n// +========================+=====================+====================+\n// | 1                      | John                | Doe                |\n// +------------------------+---------------------+--------------------+\n// | 2                      | Mary                | Poppins            |\n// +------------------------+---------------------+--------------------+\n// | 3                      | Lucky               | Luke               |\n// +------------------------+---------------------+--------------------+\n\nvar relationC = relationA.wrap('wrappedAttribute', ['firstName','lastName']);\n\n// or\n\nvar relationC = new affinity.Wrap(relationA, 'wrappedAttribute', ['firstName','lastName']);\n\n//                          &lt;----WRAPPING ATTRIBUTE--------------------------&gt;\n// +-------------------------------------------------------------------------+\n// | characterId : TInteger | wrappedAttribute : Tuple                       |\n// +========================+================================================+\n// | 1                      | Tuple{firstName : 'John', lastName : 'Doe'}    |\n// +-------------------------------------------------------------------------+\n// | 2                      | Tuple{firstName : 'Mary', lastName : 'Poppins'}|\n// +-------------------------------------------------------------------------+\n// | 3                      | Tuple{firstName : 'Lucky', lastName : 'Luke'}  |\n// +-------------------------------------------------------------------------+\n//\n</code></pre>\n","html_type":"String[]"}],"members":[{"name":"_constraintArguments","tagname":"property","owner":"Relation","id":"property-_constraintArguments","meta":{}},{"name":"_deletedCount","tagname":"property","owner":"Set","id":"property-_deletedCount","meta":{}},{"name":"_elements","tagname":"property","owner":"Set","id":"property-_elements","meta":{}},{"name":"_fks","tagname":"property","owner":"Relation","id":"property-_fks","meta":{}},{"name":"_header","tagname":"property","owner":"Relation","id":"property-_header","meta":{}},{"name":"_pk","tagname":"property","owner":"Relation","id":"property-_pk","meta":{}},{"name":"_type","tagname":"property","owner":"Set","id":"property-_type","meta":{}},{"name":"_uks","tagname":"property","owner":"Relation","id":"property-_uks","meta":{}},{"name":"ee","tagname":"property","owner":"Set","id":"property-ee","meta":{}},{"name":"extend","tagname":"property","owner":"Base","id":"property-extend","meta":{}},{"name":"_indexByEquality","tagname":"method","owner":"Set","id":"method-_indexByEquality","meta":{"private":true}},{"name":"add","tagname":"method","owner":"Set","id":"method-add","meta":{}},{"name":"atIndex","tagname":"method","owner":"Relation","id":"method-atIndex","meta":{}},{"name":"body","tagname":"method","owner":"Relation","id":"method-body","meta":{}},{"name":"clone","tagname":"method","owner":"Set","id":"method-clone","meta":{"private":true}},{"name":"compose","tagname":"method","owner":"Relation","id":"method-compose","meta":{}},{"name":"compute","tagname":"method","owner":"Relation","id":"method-compute","meta":{"chainable":true}},{"name":"count","tagname":"method","owner":"Set","id":"method-count","meta":{}},{"name":"difference","tagname":"method","owner":"Relation","id":"method-difference","meta":{}},{"name":"each","tagname":"method","owner":"Set","id":"method-each","meta":{}},{"name":"elements","tagname":"method","owner":"Set","id":"method-elements","meta":{}},{"name":"equal","tagname":"method","owner":"Relation","id":"method-equal","meta":{}},{"name":"exists","tagname":"method","owner":"Set","id":"method-exists","meta":{}},{"name":"extend","tagname":"method","owner":"Relation","id":"method-extend","meta":{}},{"name":"find","tagname":"method","owner":"Set","id":"method-find","meta":{}},{"name":"get","tagname":"method","owner":"Relation","id":"method-get","meta":{}},{"name":"group","tagname":"method","owner":"Relation","id":"method-group","meta":{}},{"name":"header","tagname":"method","owner":"Relation","id":"method-header","meta":{}},{"name":"index","tagname":"method","owner":"Set","id":"method-index","meta":{}},{"name":"intersect","tagname":"method","owner":"Relation","id":"method-intersect","meta":{}},{"name":"isCompatible","tagname":"method","owner":"Relation","id":"method-isCompatible","meta":{}},{"name":"isProperSubset","tagname":"method","owner":"Set","id":"method-isProperSubset","meta":{}},{"name":"isProperSuperset","tagname":"method","owner":"Set","id":"method-isProperSuperset","meta":{}},{"name":"isSubset","tagname":"method","owner":"Set","id":"method-isSubset","meta":{}},{"name":"isSuperset","tagname":"method","owner":"Set","id":"method-isSuperset","meta":{}},{"name":"join","tagname":"method","owner":"Relation","id":"method-join","meta":{}},{"name":"length","tagname":"method","owner":"Set","id":"method-length","meta":{}},{"name":"mixin","tagname":"method","owner":"Base","id":"method-mixin","meta":{}},{"name":"print","tagname":"method","owner":"Relation","id":"method-print","meta":{}},{"name":"product","tagname":"method","owner":"Relation","id":"method-product","meta":{}},{"name":"project","tagname":"method","owner":"Relation","id":"method-project","meta":{}},{"name":"remove","tagname":"method","owner":"Relation","id":"method-remove","meta":{}},{"name":"removeAt","tagname":"method","owner":"Set","id":"method-removeAt","meta":{}},{"name":"rename","tagname":"method","owner":"Relation","id":"method-rename","meta":{}},{"name":"restrict","tagname":"method","owner":"Relation","id":"method-restrict","meta":{}},{"name":"sdifference","tagname":"method","owner":"Relation","id":"method-sdifference","meta":{}},{"name":"setDifference","tagname":"method","owner":"Set","id":"method-setDifference","meta":{}},{"name":"setIntersection","tagname":"method","owner":"Set","id":"method-setIntersection","meta":{}},{"name":"setProduct","tagname":"method","owner":"Set","id":"method-setProduct","meta":{}},{"name":"setSymmetricDifference","tagname":"method","owner":"Set","id":"method-setSymmetricDifference","meta":{}},{"name":"setUnion","tagname":"method","owner":"Set","id":"method-setUnion","meta":{}},{"name":"sjoin","tagname":"method","owner":"Relation","id":"method-sjoin","meta":{}},{"name":"toString","tagname":"method","owner":"Relation","id":"method-toString","meta":{}},{"name":"type","tagname":"method","owner":"Set","id":"method-type","meta":{}},{"name":"ungroup","tagname":"method","owner":"Relation","id":"method-ungroup","meta":{}},{"name":"union","tagname":"method","owner":"Relation","id":"method-union","meta":{}},{"name":"unwrap","tagname":"method","owner":"Relation","id":"method-unwrap","meta":{}},{"name":"wrap","tagname":"method","owner":"Relation","id":"method-wrap","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-Operators.Wrap","short_doc":" ...","component":false,"superclasses":["Base","Type","Set","Relation"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'><a href='#!/api/Base' rel='Base' class='docClass'>Base</a><div class='subclass '><a href='#!/api/Type' rel='Type' class='docClass'>Type</a><div class='subclass '><a href='#!/api/Set' rel='Set' class='docClass'>Set</a><div class='subclass '><a href='#!/api/Relation' rel='Relation' class='docClass'>Relation</a><div class='subclass '><strong>Operators.Wrap</strong></div></div></div></div></div><h4>Files</h4><div class='dependency'><a href='source/Wrap.html#Operators-Wrap' target='_blank'>Wrap.js</a></div></pre><div class='doc-contents'>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>relationA</span> : <a href=\"#!/api/Relation\" rel=\"Relation\" class=\"docClass\">Relation</a><div class='sub-desc'><p>The relation to wrap</p>\n</div></li><li><span class='pre'>wrappingAttributeName</span> : String<div class='sub-desc'><p>The name of the wrapping attribute</p>\n</div></li><li><span class='pre'>wrappedAttributes</span> : String[]<div class='sub-desc'><p>The wrappedAttributes to wrap</p>\n\n<p>The Wrap will gather multiple wrappedAttributes into a single one, converting them to a tuple-valued attribute</p>\n\n<pre><code>var relationA = new affinity.Relation([\n         {characterId: { type: affinity.Integer}},\n         {firstName: { type: affinity.String}},\n         {lastName: { type: affinity.String}}\n     ],[\n         [1, 'John', 'Doe'],\n         [2, 'Mary', 'Poppins'],\n         [3, 'Lucky', 'Luke']\n     ]);\n\n// +------------------------+---------------------+--------------------+\n// | characterId : TInteger | firstName : TString | lastName : TString |\n// +========================+=====================+====================+\n// | 1                      | John                | Doe                |\n// +------------------------+---------------------+--------------------+\n// | 2                      | Mary                | Poppins            |\n// +------------------------+---------------------+--------------------+\n// | 3                      | Lucky               | Luke               |\n// +------------------------+---------------------+--------------------+\n\nvar relationC = relationA.wrap('wrappedAttribute', ['firstName','lastName']);\n\n// or\n\nvar relationC = new affinity.Wrap(relationA, 'wrappedAttribute', ['firstName','lastName']);\n\n//                          &lt;----WRAPPING ATTRIBUTE--------------------------&gt;\n// +-------------------------------------------------------------------------+\n// | characterId : TInteger | wrappedAttribute : Tuple                       |\n// +========================+================================================+\n// | 1                      | Tuple{firstName : 'John', lastName : 'Doe'}    |\n// +-------------------------------------------------------------------------+\n// | 2                      | Tuple{firstName : 'Mary', lastName : 'Poppins'}|\n// +-------------------------------------------------------------------------+\n// | 3                      | Tuple{firstName : 'Lucky', lastName : 'Luke'}  |\n// +-------------------------------------------------------------------------+\n//\n</code></pre>\n</div></li></ul></div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-property'>Properties</h3><div class='subsection'><div id='property-_constraintArguments' class='member first-child inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Relation' rel='Relation' class='defined-in docClass'>Relation</a><br/><a href='source/Relation.html#Relation-property-_constraintArguments' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Relation-property-_constraintArguments' class='name expandable'>_constraintArguments</a> : {pk: String[], unique: {String[]}[], fk: Object[]}<span class=\"signature\"></span></div><div class='description'><div class='short'>\n</div><div class='long'>\n</div></div></div><div id='property-_deletedCount' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Set' rel='Set' class='defined-in docClass'>Set</a><br/><a href='source/Set.html#Set-property-_deletedCount' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Set-property-_deletedCount' class='name expandable'>_deletedCount</a> : Number<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Defaults to: <code>0</code></p></div></div></div><div id='property-_elements' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Set' rel='Set' class='defined-in docClass'>Set</a><br/><a href='source/Set.html#Set-property-_elements' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Set-property-_elements' class='name expandable'>_elements</a> : Array<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Defaults to: <code>[]</code></p></div></div></div><div id='property-_fks' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Relation' rel='Relation' class='defined-in docClass'>Relation</a><br/><a href='source/Relation.html#Relation-property-_fks' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Relation-property-_fks' class='name expandable'>_fks</a> : <a href=\"#!/api/Key\" rel=\"Key\" class=\"docClass\">Key</a>[]<span class=\"signature\"></span></div><div class='description'><div class='short'>The Foreign Keys for the Relation ...</div><div class='long'><p>The Foreign Keys for the Relation</p>\n<p>Defaults to: <code>[]</code></p></div></div></div><div id='property-_header' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Relation' rel='Relation' class='defined-in docClass'>Relation</a><br/><a href='source/Relation.html#Relation-property-_header' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Relation-property-_header' class='name expandable'>_header</a> : <a href=\"#!/api/Header\" rel=\"Header\" class=\"docClass\">Header</a><span class=\"signature\"></span></div><div class='description'><div class='short'><p>The relation header</p>\n</div><div class='long'><p>The relation header</p>\n</div></div></div><div id='property-_pk' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Relation' rel='Relation' class='defined-in docClass'>Relation</a><br/><a href='source/Relation.html#Relation-property-_pk' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Relation-property-_pk' class='name expandable'>_pk</a> : <a href=\"#!/api/Key\" rel=\"Key\" class=\"docClass\">Key</a><span class=\"signature\"></span></div><div class='description'><div class='short'><p>The Primary Key for the Relation</p>\n</div><div class='long'><p>The Primary Key for the Relation</p>\n</div></div></div><div id='property-_type' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Set' rel='Set' class='defined-in docClass'>Set</a><br/><a href='source/Set.html#Set-property-_type' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Set-property-_type' class='name expandable'>_type</a> : <a href=\"#!/api/Type\" rel=\"Type\" class=\"docClass\">Type</a><span class=\"signature\"></span></div><div class='description'><div class='short'>\n</div><div class='long'>\n</div></div></div><div id='property-_uks' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Relation' rel='Relation' class='defined-in docClass'>Relation</a><br/><a href='source/Relation.html#Relation-property-_uks' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Relation-property-_uks' class='name expandable'>_uks</a> : <a href=\"#!/api/Key\" rel=\"Key\" class=\"docClass\">Key</a>[]<span class=\"signature\"></span></div><div class='description'><div class='short'>The Primary Keys for the Relation ...</div><div class='long'><p>The Primary Keys for the Relation</p>\n<p>Defaults to: <code>[]</code></p></div></div></div><div id='property-ee' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Set' rel='Set' class='defined-in docClass'>Set</a><br/><a href='source/Set.html#Set-property-ee' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Set-property-ee' class='name expandable'>ee</a> : EventEmitter<span class=\"signature\"></span></div><div class='description'><div class='short'>\n</div><div class='long'>\n</div></div></div><div id='property-extend' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Base' rel='Base' class='defined-in docClass'>Base</a><br/><a href='source/Base.html#Base-property-extend' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Base-property-extend' class='name expandable'>extend</a> : Object<span class=\"signature\"></span></div><div class='description'><div class='short'>\n</div><div class='long'>\n</div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-_indexByEquality' class='member first-child inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Set' rel='Set' class='defined-in docClass'>Set</a><br/><a href='source/Set.html#Set-method-_indexByEquality' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Set-method-_indexByEquality' class='name expandable'>_indexByEquality</a>( <span class='pre'>object</span> ) : number|null<span class=\"signature\"><span class='private' >private</span></span></div><div class='description'><div class='short'>Finds the index of an object by comparing equality ...</div><div class='long'><p>Finds the index of an object by comparing equality</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>object</span> : *<div class='sub-desc'>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>number|null</span><div class='sub-desc'><p>Index of object if found, null otherwise</p>\n</div></li></ul></div></div></div><div id='method-add' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Set' rel='Set' class='defined-in docClass'>Set</a><br/><a href='source/Set.html#Set-method-add' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Set-method-add' class='name expandable'>add</a>( <span class='pre'>element, [checkDuplicate]</span> ) : boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Adds an element to the set ...</div><div class='long'><p>Adds an element to the set</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>element</span> : *<div class='sub-desc'>\n</div></li><li><span class='pre'>checkDuplicate</span> : boolean (optional)<div class='sub-desc'><p>Tests for duplicate elements in the set. Set to false to skip this\nverification if you are sure the element is not in the set</p>\n<p>Defaults to: <code>true</code></p></div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>boolean</span><div class='sub-desc'><p>True if the element was added, false otherwise</p>\n</div></li></ul></div></div></div><div id='method-atIndex' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Relation' rel='Relation' class='defined-in docClass'>Relation</a><br/><a href='source/Relation.html#Relation-method-atIndex' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Relation-method-atIndex' class='name expandable'>atIndex</a>( <span class='pre'>index</span> ) : *|null<span class=\"signature\"></span></div><div class='description'><div class='short'>Get the tuple at the given index ...</div><div class='long'><p>Get the tuple at the given index</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>index</span> : number<div class='sub-desc'><p>The index of the tuple</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>*|null</span><div class='sub-desc'><p>@example\nvar relation = new affinity.Relation([\n         { 'firstName' : {type : affinity.String}}\n         { 'LastName'  : {type : affinity.String}}\n     ],[\n         ['John','Doe'],\n         ['Hello','World'],\n         ['Super','Duper'],\n     ]);</p>\n\n<p>relation.each(function(tuple, index){</p>\n\n<pre><code> console.log(relation.atIndex(index) === tuple) // true\n</code></pre>\n\n<p>})</p>\n\n<p>console.log(relation.atIndex(0).get('firstName')) // John</p>\n</div></li></ul><p>Overrides: <a href=\"#!/api/Set-method-atIndex\" rel=\"Set-method-atIndex\" class=\"docClass\">Set.atIndex</a></p></div></div></div><div id='method-body' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Relation' rel='Relation' class='defined-in docClass'>Relation</a><br/><a href='source/Relation.html#Relation-method-body' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Relation-method-body' class='name expandable'>body</a>( <span class='pre'>[tuples]</span> ) : <a href=\"#!/api/Set\" rel=\"Set\" class=\"docClass\">Set</a>|<a href=\"#!/api/Relation\" rel=\"Relation\" class=\"docClass\">Relation</a><span class=\"signature\"></span></div><div class='description'><div class='short'>Getter/Setter for the body property\n\nYou will more likely always use the getter (Relation.body()) than the setter\n(Re...</div><div class='long'><p>Getter/Setter for the body property</p>\n\n<p>You will more likely always use the getter (<a href=\"#!/api/Relation-method-body\" rel=\"Relation-method-body\" class=\"docClass\">Relation.body</a>()) than the setter\n(<a href=\"#!/api/Relation-method-body\" rel=\"Relation-method-body\" class=\"docClass\">Relation.body</a>(body)) part for this method.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>tuples</span> : <a href=\"#!/api/Set\" rel=\"Set\" class=\"docClass\">Set</a> (optional)<div class='sub-desc'><p>The new set of body</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Set\" rel=\"Set\" class=\"docClass\">Set</a>|<a href=\"#!/api/Relation\" rel=\"Relation\" class=\"docClass\">Relation</a></span><div class='sub-desc'><p>The body/null if getter, this if setter\n@example</p>\n\n<p>var relation = new affinity.Relation([\n         { 'firstName' : {type : affinity.String}}\n         { 'LastName'  : {type : affinity.String}}\n     ]);</p>\n\n<p>var set = new affinity.Set();</p>\n\n<p>set.add(new affinity.Tuple({firstName : 'John', lastName : 'Doe'}))\nset.add(new affinity.Tuple({firstName : 'Hello', lastName : 'World'}))\nset.add(new affinity.Tuple({firstName : 'John', lastName : 'Cage'}))</p>\n\n<p>relation.body(set); // Sets the relation's body</p>\n\n<p>relation.body() // Gets the relation's body</p>\n\n<p>console.log(relation.body() === set) // true</p>\n</div></li></ul></div></div></div><div id='method-clone' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Set' rel='Set' class='defined-in docClass'>Set</a><br/><a href='source/Set.html#Set-method-clone' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Set-method-clone' class='name expandable'>clone</a>( <span class='pre'></span> ) : <a href=\"#!/api/Set\" rel=\"Set\" class=\"docClass\">Set</a><span class=\"signature\"><span class='private' >private</span></span></div><div class='description'><div class='short'>Clones a set ...</div><div class='long'><p>Clones a set</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Set\" rel=\"Set\" class=\"docClass\">Set</a></span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-compose' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Relation' rel='Relation' class='defined-in docClass'>Relation</a><br/><a href='source/Relation.html#Relation-method-compose' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Relation-method-compose' class='name expandable'>compose</a>( <span class='pre'>relation</span> ) : Operators.Compose<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>relation</span> : <a href=\"#!/api/Relation\" rel=\"Relation\" class=\"docClass\">Relation</a><div class='sub-desc'>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Operators.Compose</span><div class='sub-desc'><p>The resulting relation</p>\n</div></li></ul></div></div></div><div id='method-compute' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Relation' rel='Relation' class='defined-in docClass'>Relation</a><br/><a href='source/Relation.html#Relation-method-compute' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Relation-method-compute' class='name expandable'>compute</a>( <span class='pre'></span> ) : <a href=\"#!/api/Relation\" rel=\"Relation\" class=\"docClass\">Relation</a><span class=\"signature\"><span class='chainable' >chainable</span></span></div><div class='description'><div class='short'>Calculates the relation. ...</div><div class='long'><p>Calculates the relation. Because the relations are only calculated when their header or their body\nare requested, you must explicitly call compute() if you want to calculate a relation.</p>\n\n<p>You should not need to use this function. Calling body() or header() calculates the relation\nautomatically</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Relation\" rel=\"Relation\" class=\"docClass\">Relation</a></span><div class='sub-desc'><p>Returns this for chaining\n@example</p>\n\n<p>var product = relation1.product(relation2);</p>\n\n<p>// At this point, nothing has been calculated.</p>\n\n<p>product.header() // Because we requested the header, it is calculated</p>\n\n<p>product.body() // Because we requested the body, it is calculated</p>\n\n<p>var product2 = relation1.product(relation2);</p>\n\n<p>product2.compute(); // Calculates the header and the body;</p>\n</div></li></ul></div></div></div><div id='method-count' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Set' rel='Set' class='defined-in docClass'>Set</a><br/><a href='source/Set.html#Set-method-count' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Set-method-count' class='name expandable'>count</a>( <span class='pre'></span> ) : number<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the number of elements in the set ...</div><div class='long'><p>Returns the number of elements in the set</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>number</span><div class='sub-desc'><p>Number of elements in the set</p>\n</div></li></ul></div></div></div><div id='method-difference' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Relation' rel='Relation' class='defined-in docClass'>Relation</a><br/><a href='source/Relation.html#Relation-method-difference' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Relation-method-difference' class='name expandable'>difference</a>( <span class='pre'>relation</span> ) : <a href=\"#!/api/Operators.Difference\" rel=\"Operators.Difference\" class=\"docClass\">Operators.Difference</a><span class=\"signature\"></span></div><div class='description'><div class='short'>Shortcut to create a Difference relation based on this relation and the specified one ...</div><div class='long'><p>Shortcut to create a Difference relation based on this relation and the specified one</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>relation</span> : <a href=\"#!/api/Relation\" rel=\"Relation\" class=\"docClass\">Relation</a><div class='sub-desc'><p>The relation to compute difference against</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Operators.Difference\" rel=\"Operators.Difference\" class=\"docClass\">Operators.Difference</a></span><div class='sub-desc'><p>The resulting relation\n@example</p>\n\n<p>var relation1 = new affinity.Relation([\n         {firstName : {type : affinity.String}}\n         {lastName : {type : affinity.String}}\n     ],[\n         ['John','Doe'],\n         ['Lucino','Veo'],\n         ['Mary','Poppins'],\n     ]);</p>\n\n<p>var relation2 = new affinity.Relation([\n         {firstName : {type : affinity.String}}\n         {lastName : {type : affinity.String}}\n     ],[\n         ['John','Doe']\n     ]);</p>\n\n<p>var diff = relation1.difference(relation2);</p>\n\n<p>// +---------------------+--------------------+\n// | firstName : TString | lastName : TString |\n// +---------------------+--------------------+\n// | Lucino              | Veo                |\n// +---------------------+--------------------+\n// | Mary                | Poppins            |\n// +---------------------+--------------------+</p>\n</div></li></ul></div></div></div><div id='method-each' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Set' rel='Set' class='defined-in docClass'>Set</a><br/><a href='source/Set.html#Set-method-each' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Set-method-each' class='name expandable'>each</a>( <span class='pre'>callback, [context]</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Iterator function for the set ...</div><div class='long'><p>Iterator function for the set</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>callback</span> : Function<div class='sub-desc'><p>The callback function</p>\n</div></li><li><span class='pre'>context</span> : Object (optional)<div class='sub-desc'><p>The \"this\" context for the callback</p>\n</div></li></ul></div></div></div><div id='method-elements' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Set' rel='Set' class='defined-in docClass'>Set</a><br/><a href='source/Set.html#Set-method-elements' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Set-method-elements' class='name expandable'>elements</a>( <span class='pre'>[elements]</span> ) : null|Array<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets or sets the elements of the set ...</div><div class='long'><p>Gets or sets the elements of the set</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>elements</span> : Array (optional)<div class='sub-desc'><p>elements of the set</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>null|Array</span><div class='sub-desc'>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>Will throw if the type of the Set has not been set</p>\n</div></li></ul></div></div></div><div id='method-equal' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Relation' rel='Relation' class='defined-in docClass'>Relation</a><br/><a href='source/Relation.html#Relation-method-equal' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Relation-method-equal' class='name expandable'>equal</a>( <span class='pre'>relation</span> ) : boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Tests if the relation is equal to another one ...</div><div class='long'><p>Tests if the relation is equal to another one</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>relation</span> : <a href=\"#!/api/Relation\" rel=\"Relation\" class=\"docClass\">Relation</a><div class='sub-desc'><p>The relation to compare to</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>boolean</span><div class='sub-desc'><p>If the relations are equal or not</p>\n</div></li></ul><p>Overrides: <a href=\"#!/api/Set-method-equal\" rel=\"Set-method-equal\" class=\"docClass\">Set.equal</a></p></div></div></div><div id='method-exists' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Set' rel='Set' class='defined-in docClass'>Set</a><br/><a href='source/Set.html#Set-method-exists' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Set-method-exists' class='name expandable'>exists</a>( <span class='pre'>element</span> ) : boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Checks if an element exists in the set ...</div><div class='long'><p>Checks if an element exists in the set</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>element</span> : *<div class='sub-desc'><p>The element to check for</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>boolean</span><div class='sub-desc'><p>True if the element exists, false if not</p>\n</div></li></ul></div></div></div><div id='method-extend' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Relation' rel='Relation' class='defined-in docClass'>Relation</a><br/><a href='source/Relation.html#Relation-method-extend' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Relation-method-extend' class='name expandable'>extend</a>( <span class='pre'>expressions</span> ) : <a href=\"#!/api/Operators.Extend\" rel=\"Operators.Extend\" class=\"docClass\">Operators.Extend</a><span class=\"signature\"></span></div><div class='description'><div class='short'>Shortcut to create an Extend operation ...</div><div class='long'><p>Shortcut to create an Extend operation</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>expressions</span> : Object[]<div class='sub-desc'><p>The expressions to evaluate</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Operators.Extend\" rel=\"Operators.Extend\" class=\"docClass\">Operators.Extend</a></span><div class='sub-desc'><p>The resulting relation</p>\n</div></li></ul></div></div></div><div id='method-find' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Set' rel='Set' class='defined-in docClass'>Set</a><br/><a href='source/Set.html#Set-method-find' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Set-method-find' class='name expandable'>find</a>( <span class='pre'>element</span> ) : null|*<span class=\"signature\"></span></div><div class='description'><div class='short'>Finds an element ...</div><div class='long'><p>Finds an element</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>element</span> : *<div class='sub-desc'><p>The element to find</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>null|*</span><div class='sub-desc'><p>the resulting element or null if not found</p>\n</div></li></ul></div></div></div><div id='method-get' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Relation' rel='Relation' class='defined-in docClass'>Relation</a><br/><a href='source/Relation.html#Relation-method-get' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Relation-method-get' class='name expandable'>get</a>( <span class='pre'>attribute</span> ) : <a href=\"#!/api/Attribute\" rel=\"Attribute\" class=\"docClass\">Attribute</a>|null<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the specified attribute object by name ...</div><div class='long'><p>Gets the specified attribute object by name</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>attribute</span> : String<div class='sub-desc'><p>Attribute name</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Attribute\" rel=\"Attribute\" class=\"docClass\">Attribute</a>|null</span><div class='sub-desc'><p>The attribute or null if not found</p>\n\n<p>@example</p>\n\n<p>var fn = new affinity.Attribute({name : 'firstName', type : affinity.String})\nvar ln = new affinity.Attribute({name : 'lastName', type : affinity.String})</p>\n\n<p>var relation = new affinity.Relation([\n         fn,\n         ln\n     ],[\n         ['John','Doe'],\n         ['Hello','World'],\n         ['Super','Duper'],\n     ]);</p>\n\n<p>relation.get('firstName') === fn // true</p>\n</div></li></ul></div></div></div><div id='method-group' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Relation' rel='Relation' class='defined-in docClass'>Relation</a><br/><a href='source/Relation.html#Relation-method-group' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Relation-method-group' class='name expandable'>group</a>( <span class='pre'>groupingAttributeName, groupedAttributeNames</span> ) : <a href=\"#!/api/Operators.Group\" rel=\"Operators.Group\" class=\"docClass\">Operators.Group</a><span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>groupingAttributeName</span> : String<div class='sub-desc'>\n</div></li><li><span class='pre'>groupedAttributeNames</span> : String[]<div class='sub-desc'>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Operators.Group\" rel=\"Operators.Group\" class=\"docClass\">Operators.Group</a></span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-header' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Relation' rel='Relation' class='defined-in docClass'>Relation</a><br/><a href='source/Relation.html#Relation-method-header' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Relation-method-header' class='name expandable'>header</a>( <span class='pre'>[header]</span> ) : null|{Header}<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets or sets the relation's header ...</div><div class='long'><p>Gets or sets the relation's header</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>header</span> : <a href=\"#!/api/Header\" rel=\"Header\" class=\"docClass\">Header</a> (optional)<div class='sub-desc'>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>null|{Header}</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-index' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Set' rel='Set' class='defined-in docClass'>Set</a><br/><a href='source/Set.html#Set-method-index' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Set-method-index' class='name expandable'>index</a>( <span class='pre'>element</span> ) : null|number<span class=\"signature\"></span></div><div class='description'><div class='short'>Get the index of an element ...</div><div class='long'><p>Get the index of an element</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>element</span> : Object<div class='sub-desc'><p>The element to search for</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>null|number</span><div class='sub-desc'><p>The index of the element if found, null otherwise</p>\n</div></li></ul></div></div></div><div id='method-intersect' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Relation' rel='Relation' class='defined-in docClass'>Relation</a><br/><a href='source/Relation.html#Relation-method-intersect' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Relation-method-intersect' class='name expandable'>intersect</a>( <span class='pre'>relation</span> ) : <a href=\"#!/api/Operators.Intersection\" rel=\"Operators.Intersection\" class=\"docClass\">Operators.Intersection</a><span class=\"signature\"></span></div><div class='description'><div class='short'>Shortcut to create an Intersect relation based on this relation and the specified one ...</div><div class='long'><p>Shortcut to create an Intersect relation based on this relation and the specified one</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>relation</span> : <a href=\"#!/api/Relation\" rel=\"Relation\" class=\"docClass\">Relation</a><div class='sub-desc'><p>The relation to compute intersection against</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Operators.Intersection\" rel=\"Operators.Intersection\" class=\"docClass\">Operators.Intersection</a></span><div class='sub-desc'><p>The resulting relation\n@example</p>\n\n<p>var relation1 = new affinity.Relation([\n         {firstName : {type : affinity.String}}\n         {lastName : {type : affinity.String}}\n     ],[\n         ['John','Doe'],\n         ['Lucino','Veo'],\n         ['Mary','Poppins'],\n     ]);</p>\n\n<p>var relation2 = new affinity.Relation([\n         {firstName : {type : affinity.String}}\n         {lastName : {type : affinity.String}}\n     ],[\n         ['John','Doe']\n     ]);</p>\n\n<p>var intersection = relation1.intersect(relation2);</p>\n\n<p>// +---------------------+--------------------+\n// | firstName : TString | lastName : TString |\n// +---------------------+--------------------+\n// | John                | Doe                |\n// +---------------------+--------------------+</p>\n</div></li></ul></div></div></div><div id='method-isCompatible' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Relation' rel='Relation' class='defined-in docClass'>Relation</a><br/><a href='source/Relation.html#Relation-method-isCompatible' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Relation-method-isCompatible' class='name expandable'>isCompatible</a>( <span class='pre'>tuple</span> ) : boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Check if a tuple is compatible with the relation ...</div><div class='long'><p>Check if a tuple is compatible with the relation</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>tuple</span> : <a href=\"#!/api/Tuple\" rel=\"Tuple\" class=\"docClass\">Tuple</a>|Object<div class='sub-desc'>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>boolean</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-isProperSubset' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Set' rel='Set' class='defined-in docClass'>Set</a><br/><a href='source/Set.html#Set-method-isProperSubset' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Set-method-isProperSubset' class='name expandable'>isProperSubset</a>( <span class='pre'>aSet</span> ) : boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Determines if the set is a proper subset of another set ...</div><div class='long'><p>Determines if the set is a proper subset of another set</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>aSet</span> : Object<div class='sub-desc'>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>boolean</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-isProperSuperset' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Set' rel='Set' class='defined-in docClass'>Set</a><br/><a href='source/Set.html#Set-method-isProperSuperset' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Set-method-isProperSuperset' class='name expandable'>isProperSuperset</a>( <span class='pre'>aSet</span> ) : boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Determine if the set is a proper superset of another set ...</div><div class='long'><p>Determine if the set is a proper superset of another set</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>aSet</span> : Object<div class='sub-desc'>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>boolean</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-isSubset' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Set' rel='Set' class='defined-in docClass'>Set</a><br/><a href='source/Set.html#Set-method-isSubset' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Set-method-isSubset' class='name expandable'>isSubset</a>( <span class='pre'>aSet</span> ) : boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Determine if the set is a subset of another set ...</div><div class='long'><p>Determine if the set is a subset of another set</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>aSet</span> : Object<div class='sub-desc'>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>boolean</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-isSuperset' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Set' rel='Set' class='defined-in docClass'>Set</a><br/><a href='source/Set.html#Set-method-isSuperset' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Set-method-isSuperset' class='name expandable'>isSuperset</a>( <span class='pre'>aSet</span> ) : boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Determine if the set is a superset of another set ...</div><div class='long'><p>Determine if the set is a superset of another set</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>aSet</span> : Object<div class='sub-desc'>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>boolean</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-join' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Relation' rel='Relation' class='defined-in docClass'>Relation</a><br/><a href='source/Relation.html#Relation-method-join' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Relation-method-join' class='name expandable'>join</a>( <span class='pre'>relation</span> ) : <a href=\"#!/api/Operators.Join\" rel=\"Operators.Join\" class=\"docClass\">Operators.Join</a><span class=\"signature\"></span></div><div class='description'><div class='short'>Shortcut to create a Join relation based on this relation and the specified one ...</div><div class='long'><p>Shortcut to create a Join relation based on this relation and the specified one</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>relation</span> : <a href=\"#!/api/Relation\" rel=\"Relation\" class=\"docClass\">Relation</a><div class='sub-desc'><p>The relation to compute the join against</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Operators.Join\" rel=\"Operators.Join\" class=\"docClass\">Operators.Join</a></span><div class='sub-desc'><p>The resulting relation\n@example</p>\n\n<p>var relation1 = new affinity.Relation([\n         {firstName : {type : affinity.String}}\n         {lastName : {type : affinity.String}}\n     ],[\n         ['John','Doe'],\n         ['Lucino','Veo'],\n         ['Mary','Poppins'],\n     ]);</p>\n\n<p>var relation2 = new affinity.Relation([\n         {LastName : {type : affinity.String}}\n         {Title    : {type : affinity.String}}\n     ],[\n         ['Doe','Mr'],\n         ['Poppins','Lady']\n     ]);</p>\n\n<p>var join = relation1.join(relation2);</p>\n\n<p>// +---------------------+--------------------+-----------------+\n// | firstName : TString | lastName : TString | Title : TString |\n// +---------------------+--------------------+-----------------+\n// | John                | Doe                | Mr              |\n// +---------------------+--------------------+-----------------+\n// | Mary                | Poppins            | Lady            |\n// +---------------------+--------------------+-----------------+</p>\n</div></li></ul></div></div></div><div id='method-length' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Set' rel='Set' class='defined-in docClass'>Set</a><br/><a href='source/Set.html#Set-method-length' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Set-method-length' class='name expandable'>length</a>( <span class='pre'></span> ) : number<span class=\"signature\"></span></div><div class='description'><div class='short'>Alias for count ...</div><div class='long'><p>Alias for <a href=\"#!/api/Set-method-count\" rel=\"Set-method-count\" class=\"docClass\">count</a></p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>number</span><div class='sub-desc'><p>Number of elements in the set</p>\n</div></li></ul></div></div></div><div id='method-mixin' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Base' rel='Base' class='defined-in docClass'>Base</a><br/><a href='source/Base.html#Base-method-mixin' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Base-method-mixin' class='name expandable'>mixin</a>( <span class='pre'>mixin</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>mixin</span> : Object<div class='sub-desc'></div></li></ul></div></div></div><div id='method-print' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Relation' rel='Relation' class='defined-in docClass'>Relation</a><br/><a href='source/Relation.html#Relation-method-print' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Relation-method-print' class='name expandable'>print</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Prints the printable representation of the Relation to console ...</div><div class='long'><p>Prints the printable representation of the Relation to console</p>\n</div></div></div><div id='method-product' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Relation' rel='Relation' class='defined-in docClass'>Relation</a><br/><a href='source/Relation.html#Relation-method-product' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Relation-method-product' class='name expandable'>product</a>( <span class='pre'>relation</span> ) : <a href=\"#!/api/Operators.Product\" rel=\"Operators.Product\" class=\"docClass\">Operators.Product</a><span class=\"signature\"></span></div><div class='description'><div class='short'>Shortcut to create a Product relation based on this relation and the specified one ...</div><div class='long'><p>Shortcut to create a Product relation based on this relation and the specified one</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>relation</span> : <a href=\"#!/api/Relation\" rel=\"Relation\" class=\"docClass\">Relation</a><div class='sub-desc'><p>The relation to compute product against</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Operators.Product\" rel=\"Operators.Product\" class=\"docClass\">Operators.Product</a></span><div class='sub-desc'><p>The resulting relation\n@example</p>\n\n<p>var relation1 = new affinity.Relation([\n         {firstName : {type : affinity.String}}\n         {lastName : {type : affinity.String}}\n     ],[\n         ['John','Doe'],\n         ['Lucino','Veo'],\n         ['Mary','Poppins'],\n     ]);</p>\n\n<p>var relation2 = new affinity.Relation([\n         {title : {type : affinity.String}}\n     ],[\n         ['Lady'],\n         ['Mr']\n     ]);</p>\n\n<p>var product = relation1.product(relation2);</p>\n\n<p>// +---------------------+--------------------+-----------------+\n// | firstName : TString | lastName : TString | Title : TString |\n// +---------------------+--------------------+-----------------+\n// | John                | Doe                | Lady            |\n// +---------------------+--------------------+-----------------+\n// | John                | Doe                | Mr              |\n// +---------------------+--------------------+-----------------+\n// | Lucino              | Veo                | Lady            |\n// +---------------------+--------------------+-----------------+\n// | Lucino              | Veo                | Mr              |\n// +---------------------+--------------------+-----------------+\n// | Mary                | Poppins            | Lady            |\n// +---------------------+--------------------+-----------------+\n// | Mary                | Poppins            | Mr              |\n// +---------------------+--------------------+-----------------+</p>\n</div></li></ul></div></div></div><div id='method-project' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Relation' rel='Relation' class='defined-in docClass'>Relation</a><br/><a href='source/Relation.html#Relation-method-project' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Relation-method-project' class='name expandable'>project</a>( <span class='pre'>attributeNames</span> ) : <a href=\"#!/api/Operators.Projection\" rel=\"Operators.Projection\" class=\"docClass\">Operators.Projection</a><span class=\"signature\"></span></div><div class='description'><div class='short'>Shortcut to create a Project relation based on this relation\n\nThe attributeNames parameter must be in the format : \n\n...</div><div class='long'><p>Shortcut to create a Project relation based on this relation</p>\n\n<p>The attributeNames parameter must be in the format : </p>\n\n\n<pre><code>\n    relation.project(['argument1', 'argument2']);\n\n</code></pre>\n\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>attributeNames</span> : String[]<div class='sub-desc'><p>The relation to compute intersection against</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Operators.Projection\" rel=\"Operators.Projection\" class=\"docClass\">Operators.Projection</a></span><div class='sub-desc'><p>The resulting relation\n@example\n         * @example</p>\n\n<p>var relation1 = new affinity.Relation([\n         {firstName : {type : affinity.String}}\n         {lastName : {type : affinity.String}}\n     ],[\n         ['John','Doe'],\n         ['Lucino','Veo'],\n         ['Mary','Poppins'],\n     ]);</p>\n\n<p>var intersection = relation1.project(['firstName']);</p>\n\n<p>// +---------------------+\n// | firstName : TString |\n// +---------------------+\n// | John                |\n// +---------------------+\n// | Lucino              |\n// +---------------------+\n// | Mary                |\n// +---------------------+</p>\n</div></li></ul></div></div></div><div id='method-remove' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Relation' rel='Relation' class='defined-in docClass'>Relation</a><br/><a href='source/Relation.html#Relation-method-remove' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Relation-method-remove' class='name expandable'>remove</a>( <span class='pre'>tupleToRemove</span> ) : boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Removes a tuple from the relation ...</div><div class='long'><p>Removes a tuple from the relation</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>tupleToRemove</span> : <a href=\"#!/api/Tuple\" rel=\"Tuple\" class=\"docClass\">Tuple</a>|Object<div class='sub-desc'><p>The tuple to be removed</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>boolean</span><div class='sub-desc'><p>True if the tuple was removed, false otherwise\n@example\nvar relation = new affinity.Relation([\n         { 'firstName' : {type : affinity.String}}\n         { 'LastName'  : {type : affinity.String}}\n     ],[\n         ['John','Doe'],\n         ['Hello','World'],\n         ['Super','Duper'],\n     ]);</p>\n\n<p>relation.remove({firstName : 'John', 'LastName', 'Doe'}); //true</p>\n\n<p>var tuple = relation.atIndex(0) // Tuple(firstName: 'Hello', lastName : 'World');</p>\n\n<p>relation.remove(tuple) // true</p>\n\n<p>relation.remove(tuple) // false, it was already removed</p>\n</div></li></ul><p>Overrides: <a href=\"#!/api/Set-method-remove\" rel=\"Set-method-remove\" class=\"docClass\">Set.remove</a></p></div></div></div><div id='method-removeAt' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Set' rel='Set' class='defined-in docClass'>Set</a><br/><a href='source/Set.html#Set-method-removeAt' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Set-method-removeAt' class='name expandable'>removeAt</a>( <span class='pre'>index</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Removes an element at the specified index ...</div><div class='long'><p>Removes an element at the specified index</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>index</span> : String<div class='sub-desc'><p>The index at which to remove the element</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>True if deleted, false otherwise</p>\n</div></li></ul></div></div></div><div id='method-rename' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Relation' rel='Relation' class='defined-in docClass'>Relation</a><br/><a href='source/Relation.html#Relation-method-rename' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Relation-method-rename' class='name expandable'>rename</a>( <span class='pre'>newNames</span> ) : <a href=\"#!/api/Operators.Rename\" rel=\"Operators.Rename\" class=\"docClass\">Operators.Rename</a><span class=\"signature\"></span></div><div class='description'><div class='short'>Shortcut to create a Rename relation based on this relation ...</div><div class='long'><p>Shortcut to create a Rename relation based on this relation</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>newNames</span> : Object<div class='sub-desc'><p>An object containing the new attribute names.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Operators.Rename\" rel=\"Operators.Rename\" class=\"docClass\">Operators.Rename</a></span><div class='sub-desc'><p>The resulting relation\n@example</p>\n\n<p>var relation1 = new affinity.Relation([\n         {firstName : {type : affinity.String}}\n         {lastName : {type : affinity.String}}\n     ],[\n         ['John','Doe'],\n         ['Lucino','Veo'],\n         ['Mary','Poppins'],\n     ]);</p>\n\n<p>var rename = relation1.rename({lastName : 'Boogie'});</p>\n\n<p>// +---------------------+--------------------+\n// | firstName : TString | Boogie : TString   |\n// +---------------------+--------------------+\n// | John                | Doe                |\n// +---------------------+--------------------+\n// | Lucino              | Veo                |\n// +---------------------+--------------------+\n// | Mary                | Poppins            |\n// +---------------------+--------------------+</p>\n</div></li></ul></div></div></div><div id='method-restrict' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Relation' rel='Relation' class='defined-in docClass'>Relation</a><br/><a href='source/Relation.html#Relation-method-restrict' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Relation-method-restrict' class='name expandable'>restrict</a>( <span class='pre'>predicate</span> ) : <a href=\"#!/api/Operators.Restriction\" rel=\"Operators.Restriction\" class=\"docClass\">Operators.Restriction</a><span class=\"signature\"></span></div><div class='description'><div class='short'>Shortcut to create a Restrict relation based on this relation ...</div><div class='long'><p>Shortcut to create a Restrict relation based on this relation</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>predicate</span> : Function<div class='sub-desc'><p>The predicate to test the tuples against</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Operators.Restriction\" rel=\"Operators.Restriction\" class=\"docClass\">Operators.Restriction</a></span><div class='sub-desc'><p>The resulting relation\n@example</p>\n\n<p>var relation = new affinity.Relation([\n         {firstName : {type : affinity.String}}\n         {lastName : {type : affinity.String}}\n     ],[\n         ['John','Doe'],\n         ['Lucino','Veo'],\n         ['Mary','Poppins'],\n         ['Robert','Robert']\n     ]);</p>\n\n<p>// Multiple ways to build a predicate:</p>\n\n<p>// Compare with static value\nrelation.restrict(relation.get('firstName').equal('John'));</p>\n\n<p>// +---------------------+--------------------+\n// | firstName : TString | Boogie : TString   |\n// +---------------------+--------------------+\n// | John                | Doe                |\n// +---------------------+--------------------+</p>\n\n<p>// Compare two attributes\nrelation.restrict(relation.get('firstName').equal(relation.get('lastName'));</p>\n\n<p>// +---------------------+--------------------+\n// | firstName : TString | Boogie : TString   |\n// +---------------------+--------------------+\n// | Robert              | Robert             |\n// +---------------------+--------------------+</p>\n\n<p>// Combine with and, or, not\nrelation.restrict( (relation.get('firstName').not().equal('John')) .and( relation.get('lastName').not().equal('Veo') ) )</p>\n\n<p>// +---------------------+--------------------+\n// | firstName : TString | Boogie : TString   |\n// +---------------------+--------------------+\n// | Mary                | Poppins            |\n// +---------------------+--------------------+\n// | Robert              | Robert             |\n// +---------------------+--------------------+</p>\n</div></li></ul></div></div></div><div id='method-sdifference' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Relation' rel='Relation' class='defined-in docClass'>Relation</a><br/><a href='source/Relation.html#Relation-method-sdifference' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Relation-method-sdifference' class='name expandable'>sdifference</a>( <span class='pre'>relation</span> ) : <a href=\"#!/api/Operators.SemiDifference\" rel=\"Operators.SemiDifference\" class=\"docClass\">Operators.SemiDifference</a><span class=\"signature\"></span></div><div class='description'><div class='short'>SemiDifference ...</div><div class='long'><p>SemiDifference</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>relation</span> : Object<div class='sub-desc'>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Operators.SemiDifference\" rel=\"Operators.SemiDifference\" class=\"docClass\">Operators.SemiDifference</a></span><div class='sub-desc'><p>The resulting relation</p>\n</div></li></ul></div></div></div><div id='method-setDifference' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Set' rel='Set' class='defined-in docClass'>Set</a><br/><a href='source/Set.html#Set-method-setDifference' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Set-method-setDifference' class='name expandable'>setDifference</a>( <span class='pre'>set2</span> ) : <a href=\"#!/api/Set\" rel=\"Set\" class=\"docClass\">Set</a><span class=\"signature\"></span></div><div class='description'><div class='short'>Perform a difference between two sets ...</div><div class='long'><p>Perform a difference between two sets</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>set2</span> : <a href=\"#!/api/Set\" rel=\"Set\" class=\"docClass\">Set</a><div class='sub-desc'><p>The set acting as a pastry cutter</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Set\" rel=\"Set\" class=\"docClass\">Set</a></span><div class='sub-desc'><p>@example</p>\n\n<p>var set1 = new affinity.Set(affinity.Integer, [1, 2, 3]);</p>\n\n<p>var set2 = new affinity.Set(affinity.Integer, [3, 4, 5]);</p>\n\n<p>var result = set1.setDifference(set2);</p>\n\n<p>// Set has elements [1, 2]</p>\n</div></li></ul></div></div></div><div id='method-setIntersection' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Set' rel='Set' class='defined-in docClass'>Set</a><br/><a href='source/Set.html#Set-method-setIntersection' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Set-method-setIntersection' class='name expandable'>setIntersection</a>( <span class='pre'>set2</span> ) : <a href=\"#!/api/Set\" rel=\"Set\" class=\"docClass\">Set</a><span class=\"signature\"></span></div><div class='description'><div class='short'>Performs an intersection with another set ...</div><div class='long'><p>Performs an intersection with another set</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>set2</span> : <a href=\"#!/api/Set\" rel=\"Set\" class=\"docClass\">Set</a><div class='sub-desc'><p>The set to be intersected with</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Set\" rel=\"Set\" class=\"docClass\">Set</a></span><div class='sub-desc'><p>The resulting set\n@example</p>\n\n<p>var set1 = new affinity.Set(affinity.Integer, [1, 2, 3]);</p>\n\n<p>var set2 = new affinity.Set(affinity.Integer, [3, 4, 5]);</p>\n\n<p>var result = set1.setIntersection(set2);</p>\n\n<p>// Set has elements [3]</p>\n</div></li></ul></div></div></div><div id='method-setProduct' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Set' rel='Set' class='defined-in docClass'>Set</a><br/><a href='source/Set.html#Set-method-setProduct' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Set-method-setProduct' class='name expandable'>setProduct</a>( <span class='pre'>set2</span> ) : <a href=\"#!/api/Set\" rel=\"Set\" class=\"docClass\">Set</a><span class=\"signature\"></span></div><div class='description'><div class='short'>Performs a product on two sets ...</div><div class='long'><p>Performs a product on two sets</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>set2</span> : <a href=\"#!/api/Set\" rel=\"Set\" class=\"docClass\">Set</a><div class='sub-desc'><p>The set to perform product with</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Set\" rel=\"Set\" class=\"docClass\">Set</a></span><div class='sub-desc'><p>@example</p>\n\n<p>var set1 = new affinity.Set(affinity.Integer, [1, 2]);</p>\n\n<p>var set2 = new affinity.Set(affinity.Integer, [3, 4]);</p>\n\n<p>var result = set1.setProduct(set2);</p>\n\n<p>// Set has elements [Tuple(1 : 1, 2 : 3),Tuple(1 : 1, 2 : 4),Tuple(1 : 2, 2 : 2),Tuple(1 : 2, 2 : 4)]</p>\n</div></li></ul></div></div></div><div id='method-setSymmetricDifference' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Set' rel='Set' class='defined-in docClass'>Set</a><br/><a href='source/Set.html#Set-method-setSymmetricDifference' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Set-method-setSymmetricDifference' class='name expandable'>setSymmetricDifference</a>( <span class='pre'>set2</span> ) : <a href=\"#!/api/Set\" rel=\"Set\" class=\"docClass\">Set</a><span class=\"signature\"></span></div><div class='description'><div class='short'>Performs a symmetric difference ...</div><div class='long'><p>Performs a symmetric difference</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>set2</span> : <a href=\"#!/api/Set\" rel=\"Set\" class=\"docClass\">Set</a><div class='sub-desc'><p>The set to peform symmetric difference against</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Set\" rel=\"Set\" class=\"docClass\">Set</a></span><div class='sub-desc'><p>The resulting set\n@example</p>\n\n<p>var set1 = new affinity.Set(affinity.Integer, [1, 2, 3]);</p>\n\n<p>var set2 = new affinity.Set(affinity.Integer, [3, 4, 5]);</p>\n\n<p>var result = set1.setSymmetricDifference(set2);</p>\n\n<p>// Set has elements [1, 2, 4, 5]</p>\n</div></li></ul></div></div></div><div id='method-setUnion' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Set' rel='Set' class='defined-in docClass'>Set</a><br/><a href='source/Set.html#Set-method-setUnion' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Set-method-setUnion' class='name expandable'>setUnion</a>( <span class='pre'>set2</span> ) : <a href=\"#!/api/Set\" rel=\"Set\" class=\"docClass\">Set</a><span class=\"signature\"></span></div><div class='description'><div class='short'>Unites two sets ...</div><div class='long'><p>Unites two sets</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>set2</span> : <a href=\"#!/api/Set\" rel=\"Set\" class=\"docClass\">Set</a><div class='sub-desc'><p>The set to perform union with</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Set\" rel=\"Set\" class=\"docClass\">Set</a></span><div class='sub-desc'><p>The resulting set\n@example</p>\n\n<p>var set1 = new affinity.Set(affinity.Integer, [1, 2, 3]);</p>\n\n<p>var set2 = new affinity.Set(affinity.Integer, [3, 4, 5]);</p>\n\n<p>var result = set1.setUnion(set2);</p>\n\n<p>// Set has elements [1, 2, 3, 4, 5] (note no duplicates)</p>\n</div></li></ul></div></div></div><div id='method-sjoin' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Relation' rel='Relation' class='defined-in docClass'>Relation</a><br/><a href='source/Relation.html#Relation-method-sjoin' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Relation-method-sjoin' class='name expandable'>sjoin</a>( <span class='pre'>relation</span> ) : <a href=\"#!/api/Operators.SemiJoin\" rel=\"Operators.SemiJoin\" class=\"docClass\">Operators.SemiJoin</a><span class=\"signature\"></span></div><div class='description'><div class='short'>SemiJoin ...</div><div class='long'><p>SemiJoin</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>relation</span> : Object<div class='sub-desc'>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Operators.SemiJoin\" rel=\"Operators.SemiJoin\" class=\"docClass\">Operators.SemiJoin</a></span><div class='sub-desc'><p>The Resulting Relation</p>\n</div></li></ul></div></div></div><div id='method-toString' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Relation' rel='Relation' class='defined-in docClass'>Relation</a><br/><a href='source/Relation.html#Relation-method-toString' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Relation-method-toString' class='name expandable'>toString</a>( <span class='pre'></span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the ...</div><div class='long'><p>Gets the</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>The string print representation of the relation</p>\n</div></li></ul></div></div></div><div id='method-type' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Set' rel='Set' class='defined-in docClass'>Set</a><br/><a href='source/Set.html#Set-method-type' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Set-method-type' class='name expandable'>type</a>( <span class='pre'>[type]</span> ) : null|<a href=\"#!/api/Type\" rel=\"Type\" class=\"docClass\">Type</a><span class=\"signature\"></span></div><div class='description'><div class='short'>Getter/Setter for the type parameter ...</div><div class='long'><p>Getter/Setter for the type parameter</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>type</span> : <a href=\"#!/api/Type\" rel=\"Type\" class=\"docClass\">Type</a> (optional)<div class='sub-desc'><p>The type of the Set</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>null|<a href=\"#!/api/Type\" rel=\"Type\" class=\"docClass\">Type</a></span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-ungroup' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Relation' rel='Relation' class='defined-in docClass'>Relation</a><br/><a href='source/Relation.html#Relation-method-ungroup' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Relation-method-ungroup' class='name expandable'>ungroup</a>( <span class='pre'>groupedAttributeNames</span> ) : <a href=\"#!/api/Operators.Ungroup\" rel=\"Operators.Ungroup\" class=\"docClass\">Operators.Ungroup</a><span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>groupedAttributeNames</span> : String[]<div class='sub-desc'>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Operators.Ungroup\" rel=\"Operators.Ungroup\" class=\"docClass\">Operators.Ungroup</a></span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-union' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Relation' rel='Relation' class='defined-in docClass'>Relation</a><br/><a href='source/Relation.html#Relation-method-union' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Relation-method-union' class='name expandable'>union</a>( <span class='pre'>relation</span> ) : <a href=\"#!/api/Operators.Union\" rel=\"Operators.Union\" class=\"docClass\">Operators.Union</a><span class=\"signature\"></span></div><div class='description'><div class='short'>Shortcut to create a Union relation based on this relation and the specified one ...</div><div class='long'><p>Shortcut to create a Union relation based on this relation and the specified one</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>relation</span> : <a href=\"#!/api/Relation\" rel=\"Relation\" class=\"docClass\">Relation</a><div class='sub-desc'><p>The relation to perform Union with</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Operators.Union\" rel=\"Operators.Union\" class=\"docClass\">Operators.Union</a></span><div class='sub-desc'><p>The resulting relation</p>\n</div></li></ul></div></div></div><div id='method-unwrap' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Relation' rel='Relation' class='defined-in docClass'>Relation</a><br/><a href='source/Relation.html#Relation-method-unwrap' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Relation-method-unwrap' class='name expandable'>unwrap</a>( <span class='pre'>wrappedAttributeNames</span> ) : <a href=\"#!/api/Operators.Unwrap\" rel=\"Operators.Unwrap\" class=\"docClass\">Operators.Unwrap</a><span class=\"signature\"></span></div><div class='description'><div class='short'>Shortcut to execute an Unwrap operation ...</div><div class='long'><p>Shortcut to execute an Unwrap operation</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>wrappedAttributeNames</span> : String[]<div class='sub-desc'><p>The names of the wrapped attributes to unwrap</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Operators.Unwrap\" rel=\"Operators.Unwrap\" class=\"docClass\">Operators.Unwrap</a></span><div class='sub-desc'><p>The resulting relation</p>\n</div></li></ul></div></div></div><div id='method-wrap' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Relation' rel='Relation' class='defined-in docClass'>Relation</a><br/><a href='source/Relation.html#Relation-method-wrap' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Relation-method-wrap' class='name expandable'>wrap</a>( <span class='pre'>wrappingAttributeName, wrappedAttributes</span> ) : <a href=\"#!/api/Operators.Wrap\" rel=\"Operators.Wrap\" class=\"docClass\">Operators.Wrap</a><span class=\"signature\"></span></div><div class='description'><div class='short'>Shortcut to execute a Wrap operation ...</div><div class='long'><p>Shortcut to execute a Wrap operation</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>wrappingAttributeName</span> : Object<div class='sub-desc'><p>The name of the new wrapping attribute</p>\n</div></li><li><span class='pre'>wrappedAttributes</span> : String[]<div class='sub-desc'><p>The attribute names to be wrapped</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Operators.Wrap\" rel=\"Operators.Wrap\" class=\"docClass\">Operators.Wrap</a></span><div class='sub-desc'><p>The resulting relation</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});