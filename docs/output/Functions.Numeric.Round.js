Ext.data.JsonP.Functions_Numeric_Round({"tagname":"class","name":"Functions.Numeric.Round","autodetected":{},"files":[{"filename":"Round.js","href":"Round.html#Functions-Numeric-Round"}],"extends":"Function","members":[{"name":"value","tagname":"method","owner":"Functions.Numeric.Round","id":"method-value","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-Functions.Numeric.Round","short_doc":"Rounds a number to its closest whole number\n\nexample :\n\nvar relation = new affinity.Relation([\n     { A : { type : af...","component":false,"superclasses":["Function"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>Function<div class='subclass '><strong>Functions.Numeric.Round</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/Round.html#Functions-Numeric-Round' target='_blank'>Round.js</a></div></pre><div class='doc-contents'><p>Rounds a number to its closest whole number</p>\n\n<p>example :</p>\n\n<pre><code>var relation = new affinity.Relation([\n     { A : { type : affinity.Integer}}\n],[\n     [-10],[-5],[-2],[-1],[0],[1],[2],[5],[10]\n]);\n\nvar A = relation.get('A');\n\nvar extended = relation.extend([{\"A.sqrt()\" : A.sqrt()}, {\"A.sqrt().round()\" : A.sqrt().round()}]);\n\n// or\n\nvar extended = relation.extend([\n    {\"A.sqrt()\"         : new affinity.SquareRoot(A)},\n    {\"A.sqrt().round()\" : new affinity.Round(new affinity.SquareRoot(A))}\n]);\n\nextended.print();\n\n// +---------------+----------------------+------------------------------+\n// | A : Integer   | A.sqrt() : Numeric   | A.sqrt().round() : Numeric   |\n// +===============+======================+==============================+\n// | -10           | NaN                  | NaN                          |\n// +---------------+----------------------+------------------------------+\n// | -5            | NaN                  | NaN                          |\n// +---------------+----------------------+------------------------------+\n// | -2            | NaN                  | NaN                          |\n// +---------------+----------------------+------------------------------+\n// | -1            | NaN                  | NaN                          |\n// +---------------+----------------------+------------------------------+\n// | 0             | 0                    | 0                            |\n// +---------------+----------------------+------------------------------+\n// | 1             | 1                    | 1                            |\n// +---------------+----------------------+------------------------------+\n// | 2             | 1.4142135623730951   | 1                            |\n// +---------------+----------------------+------------------------------+\n// | 5             | 2.23606797749979     | 2                            |\n// +---------------+----------------------+------------------------------+\n</code></pre>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-value' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Functions.Numeric.Round'>Functions.Numeric.Round</span><br/><a href='source/Round.html#Functions-Numeric-Round-method-value' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Functions.Numeric.Round-method-value' class='name expandable'>value</a>( <span class='pre'></span> ) : number<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the function's return value ...</div><div class='long'><p>Gets the function's return value</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>number</span><div class='sub-desc'>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});