Ext.data.JsonP.Functions_String_Substring({"tagname":"class","name":"Functions.String.Substring","autodetected":{},"files":[{"filename":"Substring.js","href":"Substring.html#Functions-String-Substring"}],"members":[],"alternateClassNames":[],"aliases":{},"id":"class-Functions.String.Substring","short_doc":"Returns a substring from a string\n\nExample with Extension operator :\n\nvar affinity = require('./index.js');\n\nvar rela...","component":false,"superclasses":[],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Files</h4><div class='dependency'><a href='source/Substring.html#Functions-String-Substring' target='_blank'>Substring.js</a></div></pre><div class='doc-contents'><p>Returns a substring from a string</p>\n\n<p>Example with Extension operator :</p>\n\n<pre><code>var affinity = require('./index.js');\n\nvar relation = new affinity.Relation([\n     { name : { type : affinity.String}}\n],[\n     ['John Doe'], ['Mark Clinton'], ['Bo Vril']\n]);\n\nvar name = relation.get('name');\n\nvar extended = relation.extend([{\"name.substr(0,5)\" : name.substr(0, 5)}]);\n\n//or\n\nvar extended = relation.extend([\n    { \"name.substr(0,5)\" : new affinity.Substring(name, 0, 5) }\n]);\n\nextended.print();\n\n// +-----------------+---------------------------+\n// | name : String   | name.substr(0,5) : String |\n// +=================+===========================+\n// | John Doe        | John                      |\n// +-----------------+---------------------------+\n// | Mark Clinton    | Mark                      |\n// +-----------------+---------------------------+\n// | Bo Vril         | Bo Vr                     |\n// +-----------------+---------------------------+\n</code></pre>\n</div><div class='members'></div></div>","meta":{}});