Ext.data.JsonP.Functions_String_Test({"tagname":"class","name":"Functions.String.Test","autodetected":{},"files":[{"filename":"Test.js","href":"Test.html#Functions-String-Test"}],"members":[{"name":"value","tagname":"method","owner":"Functions.String.Test","id":"method-value","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-Functions.String.Test","short_doc":"Tests a regex on a string. ...","component":false,"superclasses":[],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Files</h4><div class='dependency'><a href='source/Test.html#Functions-String-Test' target='_blank'>Test.js</a></div></pre><div class='doc-contents'><p>Tests a regex on a string.</p>\n\n<p>Example with Extension operator :</p>\n\n<pre><code>var affinity = require('./index.js');\n\nvar relation = new affinity.Relation([\n     { name : { type : affinity.String}}\n],[\n     ['John Doe'], ['Mark Clinton'], ['Bo Vril']\n]);\n\nvar name = relation.get('name');\n\nvar extended = relation.extend([{ \"name.test(/Doe/)\" : name.test(/Doe/)}]);\n\n// or\n\nvar extended = relation.extend([\n    { \"name.test(/Doe/)\" : new affinity.Test(name, /Doe/) }\n])\n\nextended.print();\n\n// +-----------------+----------------------------+\n// | name : String   | name.test(/Doe/) : Boolean |\n// +=================+============================+\n// | John Doe        | true                       |\n// +-----------------+----------------------------+\n// | Mark Clinton    | false                      |\n// +-----------------+----------------------------+\n// | Bo Vril         | false                      |\n// +-----------------+----------------------------+\n</code></pre>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-value' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Functions.String.Test'>Functions.String.Test</span><br/><a href='source/Test.html#Functions-String-Test-method-value' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Functions.String.Test-method-value' class='name expandable'>value</a>( <span class='pre'></span> ) : boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the function return value ...</div><div class='long'><p>Gets the function return value</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>boolean</span><div class='sub-desc'>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});