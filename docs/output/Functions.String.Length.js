Ext.data.JsonP.Functions_String_Length({"tagname":"class","name":"Functions.String.Length","autodetected":{},"files":[{"filename":"Length.js","href":"Length.html#Functions-String-Length"}],"members":[{"name":"value","tagname":"method","owner":"Functions.String.Length","id":"method-value","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-Functions.String.Length","short_doc":"Returns the length of a string\n\nExample with Extension operator :\n\nvar affinity = require('./index.js');\n\nvar relatio...","component":false,"superclasses":[],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Files</h4><div class='dependency'><a href='source/Length.html#Functions-String-Length' target='_blank'>Length.js</a></div></pre><div class='doc-contents'><p>Returns the length of a string</p>\n\n<p>Example with Extension operator :</p>\n\n<pre><code>var affinity = require('./index.js');\n\nvar relation = new affinity.Relation([\n     { name : { type : affinity.String}}\n],[\n     ['John Doe'], ['Mark Clinton'], ['Bo Vril']\n]);\n\nvar name = relation.get('name');\n\nvar extended = relation.extend([{\"name.length()\" : name.length()}]);\n\n// or\n\nvar extended = relation.extend([\n    {\"name.length()\" : new affinity.Length(name)}\n]);\n\nextended.print();\n\n// +-----------------+-------------------------+\n// | name : String   | name.length() : Integer |\n// +=================+=========================+\n// | John Doe        | 8                       |\n// +-----------------+-------------------------+\n// | Mark Clinton    | 12                      |\n// +-----------------+-------------------------+\n// | Bo Vril         | 7                       |\n// +-----------------+-------------------------+\n</code></pre>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-value' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Functions.String.Length'>Functions.String.Length</span><br/><a href='source/Length.html#Functions-String-Length-method-value' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Functions.String.Length-method-value' class='name expandable'>value</a>( <span class='pre'></span> ) : number<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the function return value ...</div><div class='long'><p>Gets the function return value</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>number</span><div class='sub-desc'>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});