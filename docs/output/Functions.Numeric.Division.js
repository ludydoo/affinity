Ext.data.JsonP.Functions_Numeric_Division({"tagname":"class","name":"Functions.Numeric.Division","autodetected":{},"files":[{"filename":"Division.js","href":"Division.html#Functions-Numeric-Division"}],"extends":"Function","members":[],"alternateClassNames":[],"aliases":{},"id":"class-Functions.Numeric.Division","short_doc":"Function that returns the result of a division between two numbers\n\nExemple with Extend operator :\n\n var relation = n...","component":false,"superclasses":["Function"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>Function<div class='subclass '><strong>Functions.Numeric.Division</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/Division.html#Functions-Numeric-Division' target='_blank'>Division.js</a></div></pre><div class='doc-contents'><p>Function that returns the result of a division between two numbers</p>\n\n<p>Exemple with Extend operator :</p>\n\n<pre><code> var relation = new affinity.Relation([\n     { A :  {type : affinity.Integer} },\n ],[\n     [-2], [-1], [0], [1], [2]]\n ])\n\n var relation2 = relation.extend([{B : relation.get('A')}]);\n\n var product = relation2.project(['A']).product(relation2.get('B'));\n\n var A = product.get('A');\n var B = product.get('B');\n\n\n var extended = product.extend([{C : A.div(B)}]);\n\n // or equivalent\n\n new affinity.Extend(product, [{ C : new affinity.Division(A, B) }])\n\n\n extended.print();\n\n\n // (Standard behaviour of JavaScript)\n // +---------------+---------------+---------------+\n // | A : Integer   | B : Integer   | C : Numeric   |\n // +===============+===============+===============+\n // | -2            | -2            | 1             |\n // +---------------+---------------+---------------+\n // | -2            | -1            | 2             |\n // +---------------+---------------+---------------+\n // | -2            | 0             | -Infinity     |\n // +---------------+---------------+---------------+\n // | -2            | 1             | -2            |\n // +---------------+---------------+---------------+\n // | -2            | 2             | -1            |\n // +---------------+---------------+---------------+\n // | -1            | -2            | 0.5           |\n // +---------------+---------------+---------------+\n // | -1            | -1            | 1             |\n // +---------------+---------------+---------------+\n // | -1            | 0             | -Infinity     |\n // +---------------+---------------+---------------+\n // | -1            | 1             | -1            |\n // +---------------+---------------+---------------+\n // | -1            | 2             | -0.5          |\n // +---------------+---------------+---------------+\n // | 0             | -2            | 0             |\n // +---------------+---------------+---------------+\n // | 0             | -1            | 0             |\n // +---------------+---------------+---------------+\n // | 0             | 0             | NaN           |\n // +---------------+---------------+---------------+\n // | 0             | 1             | 0             |\n // +---------------+---------------+---------------+\n // | 0             | 2             | 0             |\n // +---------------+---------------+---------------+\n // | 1             | -2            | -0.5          |\n // +---------------+---------------+---------------+\n // | 1             | -1            | -1            |\n // +---------------+---------------+---------------+\n // | 1             | 0             | Infinity      |\n // +---------------+---------------+---------------+\n // | 1             | 1             | 1             |\n // +---------------+---------------+---------------+\n // | 1             | 2             | 0.5           |\n // +---------------+---------------+---------------+\n // | 2             | -2            | -1            |\n // +---------------+---------------+---------------+\n // | 2             | -1            | -2            |\n // +---------------+---------------+---------------+\n // | 2             | 0             | Infinity      |\n // +---------------+---------------+---------------+\n // | 2             | 1             | 2             |\n // +---------------+---------------+---------------+\n // | 2             | 2             | 1             |\n // +---------------+---------------+---------------+\n</code></pre>\n</div><div class='members'></div></div>","meta":{}});